{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});var FileExtensions1ToIcon_1=require(\"./generated/FileExtensions1ToIcon\");var FileExtensions2ToIcon_1=require(\"./generated/FileExtensions2ToIcon\");var FileNamesToIcon_1=require(\"./generated/FileNamesToIcon\");var FolderNamesToIcon_1=require(\"./generated/FolderNamesToIcon\");var LanguagesToIcon_1=require(\"./generated/LanguagesToIcon\");exports.DEFAULT_FOLDER='default_folder.svg';exports.DEFAULT_FOLDER_OPENED='default_folder_opened.svg';exports.DEFAULT_ROOT='default_root_folder.svg';exports.DEFAULT_ROOT_OPENED='default_root_folder_opened.svg';exports.DEFAULT_FILE='default_file.svg';/**\n * Get icon for a folder\n * @param folderName name of folder to find icon for\n * @return icon filename\n */function getIconForFolder(folderName){var folderIcon=FolderNamesToIcon_1.FolderNamesToIcon[folderName];return folderIcon?folderIcon:exports.DEFAULT_FOLDER;}exports.getIconForFolder=getIconForFolder;var prevExtension=undefined;var prevIcon=undefined;/**\n * Get icon for a file\n * @param fileName name of file to find icon for\n * @return icon filename\n */function getIconForFile(fileName){// match by exact FileName\nvar iconFromFileName=FileNamesToIcon_1.FileNamesToIcon[fileName];if(iconFromFileName!==undefined){return iconFromFileName;}// match by File Extension\nvar extensions=fileName.split('.');if(extensions.length>2){var ext1=extensions.pop();var ext2=extensions.pop();// check for `.js.map`, `test.tsx`, ...\nvar iconFromExtension2=FileExtensions2ToIcon_1.FileExtensions2ToIcon[ext2+\".\"+ext1];if(iconFromExtension2!==undefined){return iconFromExtension2;}// check for `.js`, `tsx`, ...\nif(!ext1){// If there's no extension, return DEFAULT_ICON\nreturn exports.DEFAULT_FILE;}if(ext1===prevExtension){return prevIcon;}var iconFromExtension1=FileExtensions1ToIcon_1.FileExtensions1ToIcon[ext1];if(iconFromExtension1!==undefined){// memoization\nprevExtension=ext1;prevIcon=iconFromExtension1;return iconFromExtension1;}}else{var ext=extensions.pop();if(!ext){// If there's no extension, return DEFAULT_ICON\nreturn exports.DEFAULT_FILE;}if(ext===prevExtension){return prevIcon;}var iconFromExtension=FileExtensions1ToIcon_1.FileExtensions1ToIcon[ext];if(iconFromExtension!==undefined){// memoization\nprevExtension=ext;prevIcon=iconFromExtension;return iconFromExtension;}}// match by language\nvar fileExtension=fileName.split('.').pop();if(fileExtension!==undefined){var iconFromLang=LanguagesToIcon_1.LanguagesToIcon[fileExtension];if(iconFromLang){return iconFromLang;}}// if there's no icon for file, use default one\nreturn exports.DEFAULT_FILE;}exports.getIconForFile=getIconForFile;/**\n * Get icon for an opened folder\n * @param folderName name of opened folder to icon for\n * @return icon filename\n */function getIconForOpenFolder(folderName){return getIconForFolder(folderName).split('.').shift()+'_opened.svg';}exports.getIconForOpenFolder=getIconForOpenFolder;","map":null,"metadata":{},"sourceType":"module"}