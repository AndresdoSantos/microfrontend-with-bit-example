{"ast":null,"code":"\"use strict\";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k];}});}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!==\"default\"&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result;};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.TestsPage=void 0;const client_1=require(\"@apollo/client\");const component_1=require(\"@teambit/component\");const ui_foundation_ui_react_router_use_query_1=require(\"@teambit/ui-foundation.ui.react-router.use-query\");const documenter_ui_heading_1=require(\"@teambit/documenter.ui.heading\");const design_ui_separator_1=require(\"@teambit/design.ui.separator\");const design_ui_empty_box_1=require(\"@teambit/design.ui.empty-box\");const mdx_ui_mdx_layout_1=require(\"@teambit/mdx.ui.mdx-layout\");const design_ui_alert_card_1=require(\"@teambit/design.ui.alert-card\");const defender_ui_test_loader_1=require(\"@teambit/defender.ui.test-loader\");const classnames_1=__importDefault(require(\"classnames\"));const react_1=__importStar(require(\"react\"));const defender_ui_test_table_1=require(\"@teambit/defender.ui.test-table\");const tests_page_module_scss_1=__importDefault(require(\"./tests-page.module.scss\"));const TESTS_SUBSCRIPTION_CHANGED=(0,client_1.gql)`\n  subscription OnTestsChanged($id: String!) {\n    testsChanged(id: $id) {\n      testsResults {\n        testFiles {\n          file\n          duration\n          pass\n          failed\n          pending\n          errorStr\n          tests {\n            ancestor\n            duration\n            status\n            name\n            error\n          }\n        }\n      }\n    }\n  }\n`;const GET_COMPONENT=(0,client_1.gql)`\n  query ($id: String!) {\n    getHost {\n      id # for GQL caching\n      getTests(id: $id) {\n        loading\n        testsResults {\n          testFiles {\n            file\n            duration\n            pass\n            failed\n            pending\n            errorStr\n            tests {\n              ancestor\n              duration\n              status\n              name\n              error\n            }\n          }\n        }\n      }\n    }\n  }\n`;function TestsPage({className,emptyState}){var _a,_b,_c,_d;const query=(0,ui_foundation_ui_react_router_use_query_1.useQuery)();const component=(0,react_1.useContext)(component_1.ComponentContext);const queryHasVersion=query.get('version');const id=queryHasVersion?component.id.toString():component.id.toStringWithoutVersion();const onTestsChanged=(0,client_1.useSubscription)(TESTS_SUBSCRIPTION_CHANGED,{variables:{id}});const{data}=(0,client_1.useQuery)(GET_COMPONENT,{variables:{id}});const testData=((_a=onTestsChanged.data)===null||_a===void 0?void 0:_a.testsChanged)||((_b=data===null||data===void 0?void 0:data.getHost)===null||_b===void 0?void 0:_b.getTests);const testResults=(_c=testData===null||testData===void 0?void 0:testData.testsResults)===null||_c===void 0?void 0:_c.testFiles;// TODO: change loading EmptyBox\nif(testData===null||testData===void 0?void 0:testData.loading)return react_1.default.createElement(defender_ui_test_loader_1.TestLoader,null);const env=(_d=component.environment)===null||_d===void 0?void 0:_d.id;const EmptyStateTemplate=emptyState.get(env||'');if((testResults===null||(testData===null||testData===void 0?void 0:testData.testsResults)===null)&&component.host==='teambit.workspace/workspace'&&EmptyStateTemplate){return react_1.default.createElement(\"div\",{className:(0,classnames_1.default)(tests_page_module_scss_1.default.testsPage,className)},react_1.default.createElement(\"div\",null,react_1.default.createElement(documenter_ui_heading_1.H1,{className:tests_page_module_scss_1.default.title},\"Tests\"),react_1.default.createElement(design_ui_separator_1.Separator,{isPresentational:true,className:tests_page_module_scss_1.default.separator}),react_1.default.createElement(design_ui_alert_card_1.AlertCard,{level:\"info\",title:\"There are no\\n                tests for this Component. Learn how to add tests:\"},react_1.default.createElement(mdx_ui_mdx_layout_1.MDXLayout,null,react_1.default.createElement(EmptyStateTemplate,null)))));}// TODO: get the docs domain from the community aspect and pass it here as a prop\nif(testResults===null||(testData===null||testData===void 0?void 0:testData.testsResults)===null){return react_1.default.createElement(design_ui_empty_box_1.EmptyBox,{title:\"This component doesn\\u2019t have any tests.\",linkText:\"Learn how to add tests to your components\",link:`https://bit.dev/docs/dev-services-overview/tester/tester-overview`});}return react_1.default.createElement(\"div\",{className:(0,classnames_1.default)(tests_page_module_scss_1.default.testsPage,className)},react_1.default.createElement(\"div\",null,react_1.default.createElement(documenter_ui_heading_1.H1,{className:tests_page_module_scss_1.default.title},\"Tests\"),react_1.default.createElement(design_ui_separator_1.Separator,{isPresentational:true,className:tests_page_module_scss_1.default.separator}),react_1.default.createElement(defender_ui_test_table_1.TestTable,{testResults:testResults,className:tests_page_module_scss_1.default.testBlock})));}exports.TestsPage=TestsPage;","map":null,"metadata":{},"sourceType":"module"}