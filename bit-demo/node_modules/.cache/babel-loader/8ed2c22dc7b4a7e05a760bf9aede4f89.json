{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */'use strict';import NativeAnimatedHelper from'../NativeAnimatedHelper';// Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\nvar Animation=/*#__PURE__*/function(){function Animation(){}var _proto=Animation.prototype;_proto.start=function start(fromValue,onUpdate,onEnd,previousAnimation,animatedValue){};_proto.stop=function stop(){if(this.__nativeId){NativeAnimatedHelper.API.stopAnimation(this.__nativeId);}};_proto.__getNativeAnimationConfig=function __getNativeAnimationConfig(){// Subclasses that have corresponding animation implementation done in native\n// should override this method\nthrow new Error('This animation type cannot be offloaded to native');}// Helper function for subclasses to make sure onEnd is only called once.\n;_proto.__debouncedOnEnd=function __debouncedOnEnd(result){var onEnd=this.__onEnd;this.__onEnd=null;onEnd&&onEnd(result);};_proto.__startNativeAnimation=function __startNativeAnimation(animatedValue){NativeAnimatedHelper.API.enableQueue();animatedValue.__makeNative();NativeAnimatedHelper.API.disableQueue();this.__nativeId=NativeAnimatedHelper.generateNewAnimationId();NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId,animatedValue.__getNativeTag(),this.__getNativeAnimationConfig(),this.__debouncedOnEnd.bind(this));};return Animation;}();export default Animation;","map":null,"metadata":{},"sourceType":"module"}