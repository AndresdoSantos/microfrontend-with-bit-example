{"ast":null,"code":"import{GraphQLError}from'../../error/GraphQLError';export function undefinedVarMessage(varName,opName){return opName?\"Variable \\\"$\".concat(varName,\"\\\" is not defined by operation \\\"\").concat(opName,\"\\\".\"):\"Variable \\\"$\".concat(varName,\"\\\" is not defined.\");}/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */export function NoUndefinedVariables(context){var variableNameDefined=Object.create(null);return{OperationDefinition:{enter:function enter(){variableNameDefined=Object.create(null);},leave:function leave(operation){var usages=context.getRecursiveVariableUsages(operation);for(var _i2=0;_i2<usages.length;_i2++){var _ref2=usages[_i2];var node=_ref2.node;var varName=node.name.value;if(variableNameDefined[varName]!==true){context.reportError(new GraphQLError(undefinedVarMessage(varName,operation.name&&operation.name.value),[node,operation]));}}}},VariableDefinition:function VariableDefinition(node){variableNameDefined[node.variable.name.value]=true;}};}","map":null,"metadata":{},"sourceType":"module"}