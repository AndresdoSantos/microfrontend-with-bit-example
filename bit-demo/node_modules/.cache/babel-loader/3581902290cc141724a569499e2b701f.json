{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.logError=logError;function logError({graphQLErrors,networkError,operation}){if(graphQLErrors)graphQLErrors.forEach(({message,locations,path})=>// eslint-disable-next-line no-console\nconsole.error(`[gql] error on \"${operation.operationName}\" - \"${message}\"`,locations,path));// eslint-disable-next-line no-console\nif(networkError)console.error('[gql] network error',`\"${operation.operationName}\"`,networkError);}// // // a fetch monkey patch with logs. useful to debug gql\n// function loggingCrossFetch(...p: Parameters<typeof fetch>) {\n//   const [url, init] = p;\n//   const headers = init?.headers;\n//   const body = init?.body;\n//   console.debug('[gql]', 'fetching', url, body, { headers });\n//   const promise = crossFetch(...p);\n//   promise\n//     .then((result) => console.debug('[gql]', 'finished', result))\n//     .catch((err) => console.debug('[gql]', 'error', err));\n//   return promise;\n// }","map":null,"metadata":{},"sourceType":"module"}