{"ast":null,"code":"'use strict';// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');var redefine=require('../internals/redefine');var fails=require('../internals/fails');var wellKnownSymbol=require('../internals/well-known-symbol');var regexpExec=require('../internals/regexp-exec');var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');var SPECIES=wellKnownSymbol('species');var REPLACE_SUPPORTS_NAMED_GROUPS=!fails(function(){// #replace needs built-in support for named groups.\n// #match works fine because it just return the exec results, even if it has\n// a \"grops\" property.\nvar re=/./;re.exec=function(){var result=[];result.groups={a:'7'};return result;};return''.replace(re,'$<a>')!=='7';});// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0=function(){return'a'.replace(/./,'$0')==='$0';}();var REPLACE=wellKnownSymbol('replace');// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE=function(){if(/./[REPLACE]){return /./[REPLACE]('a','$0')==='';}return false;}();// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC=!fails(function(){// eslint-disable-next-line regexp/no-empty-group -- required for testing\nvar re=/(?:)/;var originalExec=re.exec;re.exec=function(){return originalExec.apply(this,arguments);};var result='ab'.split(re);return result.length!==2||result[0]!=='a'||result[1]!=='b';});module.exports=function(KEY,length,exec,sham){var SYMBOL=wellKnownSymbol(KEY);var DELEGATES_TO_SYMBOL=!fails(function(){// String methods call symbol-named RegEp methods\nvar O={};O[SYMBOL]=function(){return 7;};return''[KEY](O)!=7;});var DELEGATES_TO_EXEC=DELEGATES_TO_SYMBOL&&!fails(function(){// Symbol-named RegExp methods call .exec\nvar execCalled=false;var re=/a/;if(KEY==='split'){// We can't use real regex here since it causes deoptimization\n// and serious performance degradation in V8\n// https://github.com/zloirock/core-js/issues/306\nre={};// RegExp[@@split] doesn't call the regex's exec method, but first creates\n// a new one. We need to return the patched regex when creating the new one.\nre.constructor={};re.constructor[SPECIES]=function(){return re;};re.flags='';re[SYMBOL]=/./[SYMBOL];}re.exec=function(){execCalled=true;return null;};re[SYMBOL]('');return!execCalled;});if(!DELEGATES_TO_SYMBOL||!DELEGATES_TO_EXEC||KEY==='replace'&&!(REPLACE_SUPPORTS_NAMED_GROUPS&&REPLACE_KEEPS_$0&&!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE)||KEY==='split'&&!SPLIT_WORKS_WITH_OVERWRITTEN_EXEC){var nativeRegExpMethod=/./[SYMBOL];var methods=exec(SYMBOL,''[KEY],function(nativeMethod,regexp,str,arg2,forceStringMethod){if(regexp.exec===regexpExec){if(DELEGATES_TO_SYMBOL&&!forceStringMethod){// The native String method already delegates to @@method (this\n// polyfilled function), leasing to infinite recursion.\n// We avoid it by directly calling the native @@method method.\nreturn{done:true,value:nativeRegExpMethod.call(regexp,str,arg2)};}return{done:true,value:nativeMethod.call(str,regexp,arg2)};}return{done:false};},{REPLACE_KEEPS_$0:REPLACE_KEEPS_$0,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE});var stringMethod=methods[0];var regexMethod=methods[1];redefine(String.prototype,KEY,stringMethod);redefine(RegExp.prototype,SYMBOL,length==2// 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n// 21.2.5.11 RegExp.prototype[@@split](string, limit)\n?function(string,arg){return regexMethod.call(string,this,arg);}// 21.2.5.6 RegExp.prototype[@@match](string)\n// 21.2.5.9 RegExp.prototype[@@search](string)\n:function(string){return regexMethod.call(string,this);});}if(sham)createNonEnumerableProperty(RegExp.prototype[SYMBOL],'sham',true);};","map":null,"metadata":{},"sourceType":"module"}