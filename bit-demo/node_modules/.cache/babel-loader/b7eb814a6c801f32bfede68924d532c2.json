{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.Workspace=void 0;function _component(){const data=require(\"@teambit/component\");_component=function(){return data;};return data;}function _componentDescriptor(){const data=require(\"@teambit/component-descriptor\");_componentDescriptor=function(){return data;};return data;}// import { ComponentMeta } from '@teambit/component';\nclass Workspace{constructor(/**\n   * name of the workspace.\n   */name,/**\n   * absolute path of the workspace.\n   */path,/**\n   * icon of the workspace.\n   */icon,/**\n   * components container in the workspace.\n   */components,/**\n   * components contained in the workspace.\n   */componentDescriptors){this.name=name;this.path=path;this.icon=icon;this.components=components;this.componentDescriptors=componentDescriptors;}/**\n   * return a component from the workspace.\n   */getComponent(id){return this.components.find(component=>component.id.fullName===id.fullName);}static from({name,path,components,icon}){const componentDescriptors=components.map(component=>{const id=_component().ComponentID.fromObject(component.id);return _componentDescriptor().ComponentDescriptor.fromObject({id:id.toString()});});return new Workspace(name,path,icon,components.map(value=>{return _component().ComponentModel.from(value);}),componentDescriptors);}static empty(){return new Workspace('','','',[],[]);}}exports.Workspace=Workspace;","map":null,"metadata":{},"sourceType":"module"}