{"ast":null,"code":"\"use strict\";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.DependencyDrawer=void 0;const react_1=__importDefault(require(\"react\"));const ui_foundation_ui_tree_drawer_1=require(\"@teambit/ui-foundation.ui.tree.drawer\");const base_react_navigation_link_1=require(\"@teambit/base-react.navigation.link\");const component_modules_component_url_1=require(\"@teambit/component.modules.component-url\");const component_id_1=require(\"@teambit/component-id\");const dependency_drawer_module_scss_1=__importDefault(require(\"./dependency-drawer.module.scss\"));function DependencyDrawer({name,isOpen,onToggle,dependencies}){if(!dependencies||dependencies.length===0)return null;return react_1.default.createElement(ui_foundation_ui_tree_drawer_1.DrawerUI,{isOpen:isOpen,onToggle:onToggle,name:name,className:dependency_drawer_module_scss_1.default.dependencyDrawer,contentClass:dependency_drawer_module_scss_1.default.dependencyDrawerContent},react_1.default.createElement(DependencyList,{deps:dependencies}));}exports.DependencyDrawer=DependencyDrawer;function DependencyList({deps}){if(!deps||deps.length===0)return null;return react_1.default.createElement(react_1.default.Fragment,null,deps.map(dep=>{const dependency=getDependencyLink(dep);return react_1.default.createElement(\"div\",{className:dependency_drawer_module_scss_1.default.depNode,key:dep.id},react_1.default.createElement(base_react_navigation_link_1.Link,{className:dependency_drawer_module_scss_1.default.dependencyLink,external:true,href:dependency.link},react_1.default.createElement(\"span\",null,`${dependency.name}@${dep.version}`)));}));}// remove this once the links are calculated in the dependency resolver\nfunction getDependencyLink(dep){// TODO - this doesn't work for range semver, like `^16.0.0 || ^17.0.0`\nconst version=dep.version.replace('^','').replace('~','');// maybe can deduce isBitComponent iff dep.packageName is defined?\n// or if dep.packageName !== dep.id\nconst isBitComponent=dep.__typename==='ComponentDependency';const compId=component_id_1.ComponentID.tryFromString(dep.id);if(dep.packageName&&isBitComponent&&compId){return{name:dep.packageName,link:component_modules_component_url_1.ComponentUrl.toUrl(compId)};}const npmPrefix='https://npmjs.com/package';return{name:dep.packageName||dep.id,link:`${npmPrefix}/${dep.packageName||dep.id}/v/${version}`};}","map":null,"metadata":{},"sourceType":"module"}