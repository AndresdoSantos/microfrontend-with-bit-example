{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */ /**\n * @param {RegExp | string } re\n * @returns {string}\n */function source(re){if(!re)return null;if(typeof re===\"string\")return re;return re.source;}/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */function concat(...args){const joined=args.map(x=>source(x)).join(\"\");return joined;}/*\nLanguage: AsciiDoc\nRequires: xml.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://asciidoc.org\nDescription: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.\nCategory: markup\n*/ /** @type LanguageFn */function asciidoc(hljs){const HORIZONTAL_RULE={begin:'^\\'{3,}[ \\\\t]*$',relevance:10};const ESCAPED_FORMATTING=[// escaped constrained formatting marks (i.e., \\* \\_ or \\`)\n{begin:/\\\\[*_`]/},// escaped unconstrained formatting marks (i.e., \\\\** \\\\__ or \\\\``)\n// must ignore until the next formatting marks\n// this rule might not be 100% compliant with Asciidoctor 2.0 but we are entering undefined behavior territory...\n{begin:/\\\\\\\\\\*{2}[^\\n]*?\\*{2}/},{begin:/\\\\\\\\_{2}[^\\n]*_{2}/},{begin:/\\\\\\\\`{2}[^\\n]*`{2}/},// guard: constrained formatting mark may not be preceded by \":\", \";\" or\n// \"}\". match these so the constrained rule doesn't see them\n{begin:/[:;}][*_`](?![*_`])/}];const STRONG=[// inline unconstrained strong (single line)\n{className:'strong',begin:/\\*{2}([^\\n]+?)\\*{2}/},// inline unconstrained strong (multi-line)\n{className:'strong',begin:concat(/\\*\\*/,/((\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])+\\n)+/,/(\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])*/,/\\*\\*/),relevance:0},// inline constrained strong (single line)\n{className:'strong',// must not precede or follow a word character\nbegin:/\\B\\*(\\S|\\S[^\\n]*?\\S)\\*(?!\\w)/},// inline constrained strong (multi-line)\n{className:'strong',// must not precede or follow a word character\nbegin:/\\*[^\\s]([^\\n]+\\n)+([^\\n]+)\\*/}];const EMPHASIS=[// inline unconstrained emphasis (single line)\n{className:'emphasis',begin:/_{2}([^\\n]+?)_{2}/},// inline unconstrained emphasis (multi-line)\n{className:'emphasis',begin:concat(/__/,/((_(?!_)|\\\\[^\\n]|[^_\\n\\\\])+\\n)+/,/(_(?!_)|\\\\[^\\n]|[^_\\n\\\\])*/,/__/),relevance:0},// inline constrained emphasis (single line)\n{className:'emphasis',// must not precede or follow a word character\nbegin:/\\b_(\\S|\\S[^\\n]*?\\S)_(?!\\w)/},// inline constrained emphasis (multi-line)\n{className:'emphasis',// must not precede or follow a word character\nbegin:/_[^\\s]([^\\n]+\\n)+([^\\n]+)_/},// inline constrained emphasis using single quote (legacy)\n{className:'emphasis',// must not follow a word character or be followed by a single quote or space\nbegin:'\\\\B\\'(?![\\'\\\\s])',end:'(\\\\n{2}|\\')',// allow escaped single quote followed by word char\ncontains:[{begin:'\\\\\\\\\\'\\\\w',relevance:0}],relevance:0}];const ADMONITION={className:'symbol',begin:'^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',relevance:10};const BULLET_LIST={className:'bullet',begin:'^(\\\\*+|-+|\\\\.+|[^\\\\n]+?::)\\\\s+'};return{name:'AsciiDoc',aliases:['adoc'],contains:[// block comment\nhljs.COMMENT('^/{4,}\\\\n','\\\\n/{4,}$',// can also be done as...\n// '^/{4,}$',\n// '^/{4,}$',\n{relevance:10}),// line comment\nhljs.COMMENT('^//','$',{relevance:0}),// title\n{className:'title',begin:'^\\\\.\\\\w.*$'},// example, admonition & sidebar blocks\n{begin:'^[=\\\\*]{4,}\\\\n',end:'\\\\n^[=\\\\*]{4,}$',relevance:10},// headings\n{className:'section',relevance:10,variants:[{begin:'^(={1,6})[ \\t].+?([ \\t]\\\\1)?$'},{begin:'^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'}]},// document attributes\n{className:'meta',begin:'^:.+?:',end:'\\\\s',excludeEnd:true,relevance:10},// block attributes\n{className:'meta',begin:'^\\\\[.+?\\\\]$',relevance:0},// quoteblocks\n{className:'quote',begin:'^_{4,}\\\\n',end:'\\\\n_{4,}$',relevance:10},// listing and literal blocks\n{className:'code',begin:'^[\\\\-\\\\.]{4,}\\\\n',end:'\\\\n[\\\\-\\\\.]{4,}$',relevance:10},// passthrough blocks\n{begin:'^\\\\+{4,}\\\\n',end:'\\\\n\\\\+{4,}$',contains:[{begin:'<',end:'>',subLanguage:'xml',relevance:0}],relevance:10},BULLET_LIST,ADMONITION,...ESCAPED_FORMATTING,...STRONG,...EMPHASIS,// inline smart quotes\n{className:'string',variants:[{begin:\"``.+?''\"},{begin:\"`.+?'\"}]},// inline unconstrained emphasis\n{className:'code',begin:/`{2}/,end:/(\\n{2}|`{2})/},// inline code snippets (TODO should get same treatment as strong and emphasis)\n{className:'code',begin:'(`.+?`|\\\\+.+?\\\\+)',relevance:0},// indented literal block\n{className:'code',begin:'^[ \\\\t]',end:'$',relevance:0},HORIZONTAL_RULE,// images and links\n{begin:'(link:)?(http|https|ftp|file|irc|image:?):\\\\S+?\\\\[[^[]*?\\\\]',returnBegin:true,contains:[{begin:'(link|image:?):',relevance:0},{className:'link',begin:'\\\\w',end:'[^\\\\[]+',relevance:0},{className:'string',begin:'\\\\[',end:'\\\\]',excludeBegin:true,excludeEnd:true,relevance:0}],relevance:10}]};}module.exports=asciidoc;","map":null,"metadata":{},"sourceType":"module"}