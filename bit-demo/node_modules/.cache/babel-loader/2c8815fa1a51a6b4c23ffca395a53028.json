{"ast":null,"code":"import{getLocaleData}from'./LocaleDataStore';/**\r\n * Resolves a locale to a supported one (if any).\r\n * @param  {string} locale\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string} [locale]\r\n * @example\r\n * // Returns \"sr\"\r\n * resolveLocale(\"sr-Cyrl-BA\")\r\n * // Returns `undefined`\r\n * resolveLocale(\"xx-Latn\")\r\n */export default function resolveLocale(locale){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var localeMatcher=options.localeMatcher||'lookup';switch(localeMatcher){case'lookup':return resolveLocaleLookup(locale);// \"best fit\" locale matching is not supported.\n// https://github.com/catamphetamine/relative-time-format/issues/2\ncase'best fit':// return resolveLocaleBestFit(locale)\nreturn resolveLocaleLookup(locale);default:throw new RangeError(\"Invalid \\\"localeMatcher\\\" option: \".concat(localeMatcher));}}/**\r\n * Resolves a locale to a supported one (if any).\r\n * Starts from the most specific locale and gradually\r\n * falls back to less specific ones.\r\n * This is a basic implementation of the \"lookup\" algorithm.\r\n * https://tools.ietf.org/html/rfc4647#section-3.4\r\n * @param  {string} locale\r\n * @return {string} [locale]\r\n * @example\r\n * // Returns \"sr\"\r\n * resolveLocaleLookup(\"sr-Cyrl-BA\")\r\n * // Returns `undefined`\r\n * resolveLocaleLookup(\"xx-Latn\")\r\n */export function resolveLocaleLookup(locale){if(getLocaleData(locale)){return locale;}// `sr-Cyrl-BA` -> `sr-Cyrl` -> `sr`.\nvar parts=locale.split('-');while(locale.length>1){parts.pop();locale=parts.join('-');if(getLocaleData(locale)){return locale;}}}","map":null,"metadata":{},"sourceType":"module"}