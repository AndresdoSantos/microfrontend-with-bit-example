{"ast":null,"code":"\"use strict\";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.useSearcher=void 0;const react_1=require(\"react\");const use_optionally_controlled_state_1=__importDefault(require(\"use-optionally-controlled-state\"));const use_debounce_1=require(\"use-debounce\");const base_react_hooks_use_queued_execution_1=require(\"@teambit/base-react.hooks.use-queued-execution\");function useSearcher(searcher,{value:term,defaultValue='',limit=5,debounce=0}={}){const[_value=defaultValue,setValue]=(0,use_optionally_controlled_state_1.default)({controlledValue:term,initialValue:defaultValue});const[state,setResults]=(0,react_1.useState)({loading:false,items:[]});const[debouncedTerm]=(0,use_debounce_1.useDebounce)(_value,debounce);// reduce searches\nconst queuedSearch=(0,base_react_hooks_use_queued_execution_1.useQueuedExecution)(searcher);// enforce order\n(0,react_1.useEffect)(()=>{setResults(prevState=>Object.assign(Object.assign({},prevState),{loading:true}));Promise.resolve(queuedSearch(debouncedTerm,limit)).then(result=>{setResults(prev=>Object.assign(Object.assign({},prev),{items:result.items,data:result.data,loading:false}));}).catch(err=>{if(err instanceof base_react_hooks_use_queued_execution_1.PromiseCanceledError)return;throw err;});},[debouncedTerm,limit,queuedSearch]);return Object.assign(Object.assign({},state),{value:_value,onChange:setValue,defaultValue});}exports.useSearcher=useSearcher;","map":null,"metadata":{},"sourceType":"module"}