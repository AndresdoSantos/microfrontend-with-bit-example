{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.useCompareAspectsQuery=void 0;const react_1=require(\"react\");const component_ui_compare_1=require(\"@teambit/component.ui.compare\");const ui_foundation_ui_hooks_use_data_query_1=require(\"@teambit/ui-foundation.ui.hooks.use-data-query\");const client_1=require(\"@apollo/client\");const GET_COMPONENT_ASPECT_DATA=(0,client_1.gql)`\n  query GetComponentAspectData($id: String!, $extensionId: String!) {\n    getHost(id: $extensionId) {\n      id # used for GQL caching\n      get(id: $id) {\n        id {\n          name\n          version\n          scope\n        }\n        aspects {\n          aspectId: id\n          config\n          data\n          icon\n        }\n      }\n    }\n  }\n`;function useCompareAspectsQuery(host){var _a,_b,_c,_d,_e;const componentCompareContext=(0,component_ui_compare_1.useComponentCompare)();const base=(_a=componentCompareContext===null||componentCompareContext===void 0?void 0:componentCompareContext.base)===null||_a===void 0?void 0:_a.model;const compare=componentCompareContext===null||componentCompareContext===void 0?void 0:componentCompareContext.compare.model;const isCompareVersionWorkspace=componentCompareContext===null||componentCompareContext===void 0?void 0:componentCompareContext.compare.hasLocalChanges;const baseId=`${base===null||base===void 0?void 0:base.id.fullName}@${base===null||base===void 0?void 0:base.id.version}`;const compareId=isCompareVersionWorkspace?compare===null||compare===void 0?void 0:compare.id.fullName:`${compare===null||compare===void 0?void 0:compare.id.fullName}@${compare===null||compare===void 0?void 0:compare.id.version}`;const{data:baseAspectData,loading:baseLoading}=(0,ui_foundation_ui_hooks_use_data_query_1.useDataQuery)(GET_COMPONENT_ASPECT_DATA,{variables:{id:baseId,extensionId:host},skip:!(base===null||base===void 0?void 0:base.id)});const{data:compareAspectData,loading:compareLoading}=(0,ui_foundation_ui_hooks_use_data_query_1.useDataQuery)(GET_COMPONENT_ASPECT_DATA,{variables:{id:compareId,extensionId:host},skip:!(compare===null||compare===void 0?void 0:compare.id)});const loading=baseLoading||compareLoading||(componentCompareContext===null||componentCompareContext===void 0?void 0:componentCompareContext.loading);const baseAspectList=((_c=(_b=baseAspectData===null||baseAspectData===void 0?void 0:baseAspectData.getHost)===null||_b===void 0?void 0:_b.get)===null||_c===void 0?void 0:_c.aspects)||[];const compareAspectList=((_e=(_d=compareAspectData===null||compareAspectData===void 0?void 0:compareAspectData.getHost)===null||_d===void 0?void 0:_d.get)===null||_e===void 0?void 0:_e.aspects)||[];const selectedAspect=(0,component_ui_compare_1.useCompareQueryParam)('aspect');const selected=selectedAspect||(compareAspectList===null||compareAspectList===void 0?void 0:compareAspectList.length)>0&&compareAspectList[0].aspectId||undefined;const selectedBase=(0,react_1.useMemo)(()=>baseAspectList===null||baseAspectList===void 0?void 0:baseAspectList.find(baseAspect=>baseAspect.aspectId===selected),[baseAspectList,selected]);const selectedCompare=(0,react_1.useMemo)(()=>compareAspectList===null||compareAspectList===void 0?void 0:compareAspectList.find(compareAspect=>compareAspect.aspectId===selected),[compareAspectList,selected]);return{loading,selectedBase,selectedCompare,base:baseAspectList,compare:compareAspectList,selected};}exports.useCompareAspectsQuery=useCompareAspectsQuery;","map":null,"metadata":{},"sourceType":"module"}