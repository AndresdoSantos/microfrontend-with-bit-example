{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.keyTreeToNodeTree=void 0;/** converts key tree to a full tree\n * @example\n * input: {\n *    'hello': {\n *      'hello/world': undefined\n *    }\n * }\n * output: {\n *  id: 'hello',\n *  children: [\n *    {\n *      id: 'hello/world',\n *      children: undefined,\n *    }\n *  ]\n * }\n */function keyTreeToNodeTree(nodeId,children){// leaf:\nif(!children){return{id:nodeId,children:undefined};}// innerNode:\nreturn{id:nodeId,children:Object.entries(children).sort(alphabetically).sort(foldersFirst).map(([fullpath,subChildren])=>keyTreeToNodeTree(fullpath,subChildren))};}exports.keyTreeToNodeTree=keyTreeToNodeTree;function alphabetically([key1/* node1 */],[key2/* node2 */]){return key1<key2?-1:1;}function foldersFirst([,/* key1 */children1],[,/* key2 */children2]){return(children1!==undefined?-1:0)+(children2!==undefined?1:0);}","map":null,"metadata":{},"sourceType":"module"}