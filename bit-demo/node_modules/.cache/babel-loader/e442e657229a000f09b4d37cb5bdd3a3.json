{"ast":null,"code":"\"use strict\";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols===\"function\")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;};Object.defineProperty(exports,\"__esModule\",{value:true});exports.useFileContent=void 0;const client_1=require(\"@apollo/client\");const ui_foundation_ui_hooks_use_data_query_1=require(\"@teambit/ui-foundation.ui.hooks.use-data-query\");const getFile=(0,client_1.gql)`\n  query getFile($id: String!, $path: String) {\n    getHost {\n      id # used for GQL caching\n      get(id: $id) {\n        id {\n          # used for GQL caching\n          name\n          version\n          scope\n        }\n        getFile(path: $path)\n      }\n    }\n  }\n`;function useFileContent(componentId,filePath){var _a;const id=componentId===null||componentId===void 0?void 0:componentId.toString();const _b=(0,ui_foundation_ui_hooks_use_data_query_1.useDataQuery)(getFile,{variables:{id,path:filePath},skip:!componentId||filePath===undefined}),{data}=_b,rest=__rest(_b,[\"data\"]);const fileContent=(_a=data===null||data===void 0?void 0:data.getHost)===null||_a===void 0?void 0:_a.get.getFile;return Object.assign({fileContent},rest);}exports.useFileContent=useFileContent;","map":null,"metadata":{},"sourceType":"module"}