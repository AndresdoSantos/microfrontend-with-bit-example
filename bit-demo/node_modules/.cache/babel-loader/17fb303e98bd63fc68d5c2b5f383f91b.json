{"ast":null,"code":"/**\n * The `defineToStringTag()` function checks first to see if the runtime\n * supports the `Symbol` class and then if the `Symbol.toStringTag` constant\n * is defined as a `Symbol` instance. If both conditions are met, the\n * Symbol.toStringTag property is defined as a getter that returns the\n * supplied class constructor's name.\n *\n * @method defineToStringTag\n *\n * @param {Class<any>} classObject a class such as Object, String, Number but\n * typically one of your own creation through the class keyword; `class A {}`,\n * for example.\n */export default function defineToStringTag(classObject){if(typeof Symbol==='function'&&Symbol.toStringTag){Object.defineProperty(classObject.prototype,Symbol.toStringTag,{get:function get(){return this.constructor.name;}});}}","map":null,"metadata":{},"sourceType":"module"}