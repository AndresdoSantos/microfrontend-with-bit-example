{"ast":null,"code":"\"use strict\";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols===\"function\")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.Container=void 0;const react_1=__importDefault(require(\"react\"));const classnames_1=__importDefault(require(\"classnames\"));const abs_container_module_scss_1=__importDefault(require(\"../abs-container.module.scss\"));function Container(_a){var{className,open,margin,indent,forwardRef,style}=_a,rest=__rest(_a,[\"className\",\"open\",\"margin\",\"indent\",\"forwardRef\",\"style\"]);return react_1.default.createElement(\"div\",Object.assign({ref:forwardRef,className:classnames_1.default(abs_container_module_scss_1.default.container,className),\"data-open\":open,style:addDisplacement(margin,indent,style)},rest));}exports.Container=Container;// could memo, but needs to be react15 compatible, and perf should be decent\nfunction addDisplacement(margin,indent,baseStyles){if(!margin&&!indent)return baseStyles;const displacement={'--bit-drawer-margin':pixalize(margin),'--bit-drawer-indent':pixalize(indent)};return Object.assign(Object.assign({},baseStyles),displacement);}function pixalize(value){if(typeof value==='number')return`${value}px`;return value;}","map":null,"metadata":{},"sourceType":"module"}