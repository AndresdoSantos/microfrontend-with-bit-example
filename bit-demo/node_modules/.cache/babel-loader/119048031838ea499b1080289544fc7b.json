{"ast":null,"code":"\"use strict\";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.FuzzySearcher=void 0;// import { SearchResults } from '@teambit/command-bar';\nconst fuse_js_1=__importDefault(require(\"fuse.js\"));const memoize_one_1=__importDefault(require(\"memoize-one\"));// keep it simple!\n/** a template for creating a command bar searcher.\n * Simply extend and implement the abstract methods, and fuse.js will take care of the rest\n */class FuzzySearcher{constructor(baseSearcherOptions){this.baseSearcherOptions=baseSearcherOptions;this.fuseCommands=new fuse_js_1.default([],{keys:this.baseSearcherOptions.searchKeys});// this method could be called on every render. memoize to prevent redundant calls\nthis.update=(0,memoize_one_1.default)(components=>{const searchResults=components.map(this.toSearchableItem);this.fuseCommands.setCollection(searchResults);});this.search=(0,memoize_one_1.default)((term,limit)=>{const searchResults=this.fuseCommands.search(term,{limit});return{items:searchResults.map(this.toSearchResult)};});}}exports.FuzzySearcher=FuzzySearcher;","map":null,"metadata":{},"sourceType":"module"}