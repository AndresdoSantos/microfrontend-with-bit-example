{"ast":null,"code":"\"use strict\";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k];}});}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!==\"default\"&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result;};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.OverviewCompare=void 0;const component_1=require(\"@teambit/component\");const component_ui_compare_1=require(\"@teambit/component.ui.compare\");const design_ui_input_toggle_1=require(\"@teambit/design.ui.input.toggle\");const design_ui_round_loader_1=require(\"@teambit/design.ui.round-loader\");const docs_1=require(\"@teambit/docs\");const react_1=__importStar(require(\"react\"));const lanes_hooks_use_lanes_1=require(\"@teambit/lanes.hooks.use-lanes\");const overview_compare_module_scss_1=__importDefault(require(\"./overview-compare.module.scss\"));function OverviewCompare(props){const{titleBadges}=props;const componentCompare=(0,component_ui_compare_1.useComponentCompare)();const[isScrollingSynced,setIsScrollingSynced]=(0,react_1.useState)(true);const leftPanelRef=(0,react_1.useRef)(null);const rightPanelRef=(0,react_1.useRef)(null);function handleLeftPanelScroll(event){var _a,_b,_c;if(!isScrollingSynced)return;(_a=rightPanelRef.current)===null||_a===void 0?void 0:_a.scrollTo({top:(_b=event.currentTarget)===null||_b===void 0?void 0:_b.scrollTop,left:(_c=event.currentTarget)===null||_c===void 0?void 0:_c.scrollLeft});}function handleRightPanelScroll(event){var _a,_b,_c;if(!isScrollingSynced)return;(_a=leftPanelRef.current)===null||_a===void 0?void 0:_a.scrollTo({top:(_b=event.currentTarget)===null||_b===void 0?void 0:_b.scrollTop,left:(_c=event.currentTarget)===null||_c===void 0?void 0:_c.scrollLeft});}function handleScrollingSyncChange(){var _a,_b,_c;(_a=rightPanelRef.current)===null||_a===void 0?void 0:_a.scrollTo({top:(_b=leftPanelRef.current)===null||_b===void 0?void 0:_b.scrollTop,left:(_c=leftPanelRef.current)===null||_c===void 0?void 0:_c.scrollLeft});setIsScrollingSynced(prev=>!prev);}const{lanesModel,updateLanesModel}=(0,lanes_hooks_use_lanes_1.useLanes)();const BaseLayout=(0,react_1.useMemo)(()=>{if((componentCompare===null||componentCompare===void 0?void 0:componentCompare.base)===undefined){return react_1.default.createElement(react_1.default.Fragment,null);}// const baseVersion = componentCompare?.base.model.version;\nconst baseId=componentCompare===null||componentCompare===void 0?void 0:componentCompare.base.model.id;// const isBaseOnLane = !!lanesModel?.lanebyComponentHash.get(baseVersion);\nconst isBaseOnLane=!!(lanesModel===null||lanesModel===void 0?void 0:lanesModel.isComponentOnNonDefaultLanes(baseId,true));const lanesContext=isBaseOnLane?{lanesModel,updateLanesModel}:undefined;return react_1.default.createElement(\"div\",{className:overview_compare_module_scss_1.default.subView,ref:leftPanelRef,onScroll:handleLeftPanelScroll},react_1.default.createElement(lanes_hooks_use_lanes_1.LanesContext.Provider,{value:lanesContext},react_1.default.createElement(component_1.ComponentProvider,{component:componentCompare.base.model},react_1.default.createElement(docs_1.Overview,{titleBadges:titleBadges}))));},[componentCompare===null||componentCompare===void 0?void 0:componentCompare.base,isScrollingSynced]);const CompareLayout=(0,react_1.useMemo)(()=>{if((componentCompare===null||componentCompare===void 0?void 0:componentCompare.compare)===undefined){return react_1.default.createElement(react_1.default.Fragment,null);}// const compareVersion = componentCompare?.compare.model.version;\nconst compareId=componentCompare===null||componentCompare===void 0?void 0:componentCompare.compare.model.id;const isCompareOnLane=!!(lanesModel===null||lanesModel===void 0?void 0:lanesModel.isComponentOnNonDefaultLanes(compareId,true));const lanesContext=isCompareOnLane?{lanesModel,updateLanesModel}:undefined;return react_1.default.createElement(\"div\",{className:overview_compare_module_scss_1.default.subView,ref:rightPanelRef,onScroll:handleRightPanelScroll},react_1.default.createElement(lanes_hooks_use_lanes_1.LanesContext.Provider,{value:lanesContext},react_1.default.createElement(component_1.ComponentProvider,{component:componentCompare.compare.model},react_1.default.createElement(docs_1.Overview,{titleBadges:titleBadges}))));},[componentCompare===null||componentCompare===void 0?void 0:componentCompare.compare,isScrollingSynced]);return react_1.default.createElement(react_1.default.Fragment,null,(componentCompare===null||componentCompare===void 0?void 0:componentCompare.loading)&&react_1.default.createElement(\"div\",{className:overview_compare_module_scss_1.default.loader},react_1.default.createElement(design_ui_round_loader_1.RoundLoader,null)),react_1.default.createElement(\"div\",{className:overview_compare_module_scss_1.default.checkboxContainer},react_1.default.createElement(\"div\",{className:overview_compare_module_scss_1.default.toggleContainer},react_1.default.createElement(design_ui_input_toggle_1.Toggle,{checked:isScrollingSynced,onInputChanged:handleScrollingSyncChange,className:overview_compare_module_scss_1.default.toggle}),\"Synchronize Scrolling\")),react_1.default.createElement(component_ui_compare_1.CompareSplitLayoutPreset,{base:BaseLayout,compare:CompareLayout,className:overview_compare_module_scss_1.default.splitLayout}));}exports.OverviewCompare=OverviewCompare;","map":null,"metadata":{},"sourceType":"module"}