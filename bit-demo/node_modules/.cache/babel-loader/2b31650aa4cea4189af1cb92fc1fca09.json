{"ast":null,"code":"/*\nLanguage: Ceylon\nAuthor: Lucas Werkmeister <mail@lucaswerkmeister.de>\nWebsite: https://ceylon-lang.org\n*/ /** @type LanguageFn */function ceylon(hljs){// 2.3. Identifiers and keywords\nconst KEYWORDS='assembly module package import alias class interface object given value '+'assign void function new of extends satisfies abstracts in out return '+'break continue throw assert dynamic if else switch case for while try '+'catch finally then let this outer super is exists nonempty';// 7.4.1 Declaration Modifiers\nconst DECLARATION_MODIFIERS='shared abstract formal default actual variable late native deprecated '+'final sealed annotation suppressWarnings small';// 7.4.2 Documentation\nconst DOCUMENTATION='doc by license see throws tagged';const SUBST={className:'subst',excludeBegin:true,excludeEnd:true,begin:/``/,end:/``/,keywords:KEYWORDS,relevance:10};const EXPRESSIONS=[{// verbatim string\nclassName:'string',begin:'\"\"\"',end:'\"\"\"',relevance:10},{// string literal or template\nclassName:'string',begin:'\"',end:'\"',contains:[SUBST]},{// character literal\nclassName:'string',begin:\"'\",end:\"'\"},{// numeric literal\nclassName:'number',begin:'#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',relevance:0}];SUBST.contains=EXPRESSIONS;return{name:'Ceylon',keywords:{keyword:KEYWORDS+' '+DECLARATION_MODIFIERS,meta:DOCUMENTATION},illegal:'\\\\$[^01]|#[^0-9a-fA-F]',contains:[hljs.C_LINE_COMMENT_MODE,hljs.COMMENT('/\\\\*','\\\\*/',{contains:['self']}),{// compiler annotation\nclassName:'meta',begin:'@[a-z]\\\\w*(?::\"[^\"]*\")?'}].concat(EXPRESSIONS)};}module.exports=ceylon;","map":null,"metadata":{},"sourceType":"module"}