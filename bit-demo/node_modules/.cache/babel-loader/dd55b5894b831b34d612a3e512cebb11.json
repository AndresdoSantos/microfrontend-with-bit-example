{"ast":null,"code":"/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */import invariant from'fbjs/lib/invariant';import requestIdleCallback,{cancelIdleCallback}from'../../modules/requestIdleCallback';var InteractionManager={Events:{interactionStart:'interactionStart',interactionComplete:'interactionComplete'},/**\n   * Schedule a function to run after all interactions have completed.\n   */runAfterInteractions:function runAfterInteractions(task){var handle;var promise=new Promise(function(resolve){handle=requestIdleCallback(function(){if(task){resolve(task());}else{resolve();}});});return{then:promise.then.bind(promise),done:promise.then.bind(promise),cancel:function cancel(){cancelIdleCallback(handle);}};},/**\n   * Notify manager that an interaction has started.\n   */createInteractionHandle:function createInteractionHandle(){return 1;},/**\n   * Notify manager that an interaction has completed.\n   */clearInteractionHandle:function clearInteractionHandle(handle){invariant(!!handle,'Must provide a handle to clear.');},addListener:function addListener(){}};export default InteractionManager;","map":null,"metadata":{},"sourceType":"module"}