{"ast":null,"code":"\"use strict\";var _=require(\"../lodash\");module.exports=initOrder;/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */function initOrder(g){var visited={};var simpleNodes=_.filter(g.nodes(),function(v){return!g.children(v).length;});var maxRank=_.max(_.map(simpleNodes,function(v){return g.node(v).rank;}));var layers=_.map(_.range(maxRank+1),function(){return[];});function dfs(v){if(_.has(visited,v))return;visited[v]=true;var node=g.node(v);layers[node.rank].push(v);_.forEach(g.successors(v),dfs);}var orderedVs=_.sortBy(simpleNodes,function(v){return g.node(v).rank;});_.forEach(orderedVs,dfs);return layers;}","map":null,"metadata":{},"sourceType":"module"}