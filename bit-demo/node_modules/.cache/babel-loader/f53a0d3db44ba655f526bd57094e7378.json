{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.ComponentStatus=void 0;class ComponentStatus{constructor(/**\n   * is the component modified.\n   */modifyInfo,/**\n   * is the new component new.\n   */isNew,/**\n   * is the component deleted from the workspace.\n   */isDeleted,/**\n   * is the component staged.\n   */isStaged,/**\n   * does the component exists in the workspace.\n   */isInWorkspace,/**\n   * does the component exists in the scope.\n   */isInScope,/**\n   * does the component is outdated (pending for update).\n   */isOutdated,/**\n   *  the component is not authored and not imported.\n   */nested,/**\n   * does the component exist on the current lane\n   */isInCurrentLane){this.modifyInfo=modifyInfo;this.isNew=isNew;this.isDeleted=isDeleted;this.isStaged=isStaged;this.isInWorkspace=isInWorkspace;this.isInScope=isInScope;this.isOutdated=isOutdated;this.nested=nested;this.isInCurrentLane=isInCurrentLane;}static fromLegacy(status,hasModifiedDependencies,isOutdated,isInCurrentLane){const modify={hasModifiedFiles:!!status.modified,hasModifiedDependencies};return new ComponentStatus(modify,!!status.newlyCreated,!!status.deleted,!!status.staged,!status.notExist,!status.missingFromScope,isOutdated,!!status.nested,isInCurrentLane);}}exports.ComponentStatus=ComponentStatus;","map":null,"metadata":{},"sourceType":"module"}