{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.LanesModel=void 0;const component_1=require(\"@teambit/component\");const lane_id_1=require(\"@teambit/lane-id\");const component_id_1=require(\"@teambit/component-id\");const base_ui_utils_string_affix_1=require(\"@teambit/base-ui.utils.string.affix\");const path_to_regexp_1=require(\"path-to-regexp\");/**\n * Represents the entire Lanes State in a Workspace/Scope\n * Provides helper methods to extract and map Lane information\n * Keeps track of all the lanes and the currently selected lane from the UI\n */class LanesModel{constructor({lanes,viewedLane,currentLane}){this.getLaneComponentUrlByVersion=(componentId,laneId)=>{var _a;// if there is no version, the component is new and is on main\nconst defaultLane=this.getDefaultLane();if(!componentId.version||!laneId||!defaultLane)return LanesModel.getMainComponentUrl(componentId);const lane=(_a=this.getLanesByComponentId(componentId))===null||_a===void 0?void 0:_a.find(l=>l.id.isEqual(laneId));if(!lane){// return url from main if it exits\nreturn defaultLane.components.find(c=>c.isEqual(componentId))?LanesModel.getMainComponentUrl(componentId,laneId):undefined;}if(lane.id.isDefault())return LanesModel.getMainComponentUrl(componentId);return LanesModel.getLaneComponentUrl(componentId,lane.id);};this.setViewedLane=viewedLaneId=>{this.viewedLane=viewedLaneId?this.lanes.find(lane=>lane.id.isEqual(viewedLaneId)):undefined;};this.resolveComponentByFullName=(fullName,laneId)=>{var _a;return(_a=laneId&&this.lanes.find(lane=>lane.id.isEqual(laneId))||this.viewedLane)===null||_a===void 0?void 0:_a.components.find(component=>component.fullName===fullName);};this.getDefaultLane=()=>this.lanes.find(lane=>lane.id.isDefault());this.getNonMainLanes=()=>this.lanes.filter(lane=>!lane.id.isDefault());this.isInViewedLane=(componentId,includeVersion)=>{var _a,_b;if(includeVersion){return(_a=this.viewedLane)===null||_a===void 0?void 0:_a.components.some(comp=>includeVersion&&comp.isEqual(componentId));}return(_b=this.viewedLane)===null||_b===void 0?void 0:_b.components.some(comp=>includeVersion&&comp.isEqual(componentId,{ignoreVersion:true}));};this.getLanesByComponentName=componentId=>this.lanesByComponentName.get(componentId.fullName);this.getLanesByComponentId=componentId=>this.lanesByComponentId.get(componentId.toString());this.isComponentOnMain=(componentId,includeVersion)=>{var _a,_b;if(includeVersion){return!!((_a=this.getLanesByComponentId(componentId))===null||_a===void 0?void 0:_a.some(lane=>lane.id.isDefault()));}return!!((_b=this.getLanesByComponentName(componentId))===null||_b===void 0?void 0:_b.some(lane=>lane.id.isDefault()));};this.isComponentOnMainButNotOnLane=(componentId,includeVersion,laneId)=>{return this.isComponentOnMain(componentId,includeVersion)&&!this.isComponentOnNonDefaultLanes(componentId,includeVersion,laneId);};this.isComponentOnLaneButNotOnMain=(componentId,includeVersion,laneId)=>{return!this.isComponentOnMain(componentId,includeVersion)&&this.isComponentOnNonDefaultLanes(componentId,includeVersion,laneId);};this.isComponentOnNonDefaultLanes=(componentId,includeVersion,laneId)=>{var _a,_b;if(includeVersion){return!!((_a=this.getLanesByComponentId(componentId))===null||_a===void 0?void 0:_a.some(lane=>!lane.id.isDefault()&&(!laneId||lane.id.isEqual(laneId))));}return!!((_b=this.getLanesByComponentName(componentId))===null||_b===void 0?void 0:_b.some(lane=>!lane.id.isDefault()&&(!laneId||lane.id.isEqual(laneId))));};this.viewedLane=viewedLane;this.currentLane=currentLane;this.lanes=lanes||[];this.laneIdsByScope=LanesModel.groupByScope(this.lanes.map(lane=>lane.id));const{byId,byName}=LanesModel.groupByComponentNameAndId(this.lanes);this.lanesByComponentId=byId;this.lanesByComponentName=byName;}static mapToLaneModel(laneData,host){const{id,components,readmeComponent,hash}=laneData;const componentIds=(components===null||components===void 0?void 0:components.map(component=>{const componentModel=component_id_1.ComponentID.fromObject(component.id);return componentModel;}))||[];const readmeComponentModel=readmeComponent&&component_1.ComponentModel.from(Object.assign(Object.assign({},readmeComponent),{host}));return{id:lane_id_1.LaneId.from(id.name,id.scope),components:componentIds,readmeComponent:readmeComponentModel,hash};}static groupByScope(laneIds){const grouped=new Map();laneIds.forEach(laneId=>{const{scope}=laneId;if(!grouped.has(scope)){grouped.set(scope,[laneId]);}else{const existing=grouped.get(scope);grouped.set(scope,[...existing,laneId]);}});return grouped;}static groupByComponentNameAndId(lanes){const byName=new Map();const byId=new Map();lanes.forEach(lane=>{const{components}=lane;components.forEach(component=>{const name=component.fullName;const id=component.toString();const existingByName=byName.get(name)||[];const existingById=byId.get(id)||[];existingByName.push(lane);existingById.push(lane);byName.set(name,existingByName);byId.set(id,existingById);});});return{byName,byId};}static from({data,host,viewedLaneId}){var _a,_b,_c,_d;const lanes=((_b=(_a=data===null||data===void 0?void 0:data.lanes)===null||_a===void 0?void 0:_a.list)===null||_b===void 0?void 0:_b.map(lane=>LanesModel.mapToLaneModel(lane,host)))||[];const currentLane=((_d=(_c=data.lanes)===null||_c===void 0?void 0:_c.current)===null||_d===void 0?void 0:_d.id)?lanes.find(lane=>{var _a,_b;return lane.id.isEqual((_b=(_a=data.lanes)===null||_a===void 0?void 0:_a.current)===null||_b===void 0?void 0:_b.id);}):undefined;const lanesModel=new LanesModel({lanes,currentLane});lanesModel.setViewedLane(viewedLaneId);return lanesModel;}}exports.LanesModel=LanesModel;LanesModel.lanesPrefix='~lane';LanesModel.baseLaneComponentRoute='/~component';LanesModel.lanePath=':scopeId/:laneId';LanesModel.laneUrlParamsKey='lane';LanesModel.laneFromPathRegex=(0,path_to_regexp_1.pathToRegexp)(`${LanesModel.lanesPrefix}/${LanesModel.lanePath}`,undefined,{end:false,start:false});LanesModel.getLaneIdFromPathname=(pathname,urlSearchParams)=>{const matches=LanesModel.laneFromPathRegex.exec(pathname);if(matches){const[,scopeId,laneId]=matches;return lane_id_1.LaneId.from(laneId,scopeId);}if(urlSearchParams){const laneIdQueryParam=urlSearchParams.get(LanesModel.laneUrlParamsKey);return laneIdQueryParam?lane_id_1.LaneId.parse(laneIdQueryParam):undefined;}return undefined;};LanesModel.getLaneUrl=(laneId,relative)=>`${relative?'':'/'}${LanesModel.lanesPrefix}/${laneId.toString()}`;LanesModel.getLaneComponentUrl=(componentId,laneId)=>{const isExternalComponent=componentId.scope!==laneId.scope;const laneUrl=LanesModel.getLaneUrl(laneId);const urlSearch=(0,base_ui_utils_string_affix_1.affix)('?version=',componentId.version);if(!isExternalComponent){return`${laneUrl}${LanesModel.baseLaneComponentRoute}/${componentId.fullName}${urlSearch}`;}return`${laneUrl}${LanesModel.baseLaneComponentRoute}/${componentId.toStringWithoutVersion()}${urlSearch}`;};LanesModel.getMainComponentUrl=(componentId,laneId)=>{const componentUrl=componentId.fullName;const urlSearch=(0,base_ui_utils_string_affix_1.affix)(`?${LanesModel.laneUrlParamsKey}=`,laneId===null||laneId===void 0?void 0:laneId.toString());return`${componentUrl}${urlSearch}`;};","map":null,"metadata":{},"sourceType":"module"}