{"ast":null,"code":"/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */'use strict';var isObject=require('isobject');function isObjectObject(o){return isObject(o)===true&&Object.prototype.toString.call(o)==='[object Object]';}module.exports=function isPlainObject(o){var ctor,prot;if(isObjectObject(o)===false)return false;// If has modified constructor\nctor=o.constructor;if(typeof ctor!=='function')return false;// If has modified prototype\nprot=ctor.prototype;if(isObjectObject(prot)===false)return false;// If constructor does not have an Object-specific method\nif(prot.hasOwnProperty('isPrototypeOf')===false){return false;}// Most likely a plain Object\nreturn true;};","map":null,"metadata":{},"sourceType":"module"}